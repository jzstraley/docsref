@use "../../utilities/break" as break;


// ----------------------------------------------------------------------------
// Keyframes
// ----------------------------------------------------------------------------

// Show consent
@keyframes consent {
  0% {
    opacity: 0;
    transform: translateY(100%);
  }

  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

// Show consent overlay
@keyframes overlay {
  0% {
    opacity: 0;
  }

  100% {
    opacity: 1;
  }
}

// ----------------------------------------------------------------------------
// Rules
// ----------------------------------------------------------------------------

// Consent
.md-consent {

  // Consent overlay
  &__overlay {
    position: fixed;
    top: 0;
    z-index: 5;
    width: 100%;
    height: 100%;
    background-color: hsla(0, 0%, 0%, 0.54);
    backdrop-filter: blur(px2rem(2px));
    opacity: 1;
    animation: overlay 250ms both;
  }

  // Consent wrapper
  &__inner {
    position: fixed;
    bottom: 0;
    z-index: 5;
    width: 100%;
    max-height: 100%;
    padding: 0;
    overflow: auto;
    background-color: var(--md-default-bg-color);
    border: 0;
    border-radius: px2rem(2px);
    box-shadow:
      0 0           px2rem(4px) rgba(0, 0, 0, 0.1),
      0 px2rem(4px) px2rem(8px) rgba(0, 0, 0, 0.2);
    animation: consent 500ms cubic-bezier(0.1, 0.7, 0.1, 1) both;
  }

  // Consent form
  &__form {
    padding: px2rem(16px);
  }

  // Consent settings
  &__settings {
    display: none;
    margin: 1em 0;

    // Show settings
    input:checked + & {
      display: block;
    }
  }

  // Consent controls
  &__controls {
    margin-bottom: px2rem(16px);

    // Consent control button
    .md-typeset & .md-button {
      display: inline;

      // [tablet +]: Align buttons horizontally
      @include break.break-to-device(("mobile", "portrait")) {
        display: block;
        width: 100%;
        margin-top: px2rem(8px);
        text-align: center;
      }
    }
  }

  // Ensure users realize that labels are clickab√∂e
  label {
    cursor: pointer;
  }
}
