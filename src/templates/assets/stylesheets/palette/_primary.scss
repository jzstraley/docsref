@use "sass:map";
@use "sass:list";
@use "sass:math";
@use "material-color";
@use "../utilities/break" as break;


// ----------------------------------------------------------------------------
// Rules
// ----------------------------------------------------------------------------

// Define primary colors
@each $name, $colors in (
  "red":         material-color.$clr-red-400         material-color.$clr-red-300         material-color.$clr-red-600,
  "pink":        material-color.$clr-pink-500        material-color.$clr-pink-400        material-color.$clr-pink-700,
  "purple":      material-color.$clr-purple-400      material-color.$clr-purple-300      material-color.$clr-purple-600,
  "deep-purple": material-color.$clr-deep-purple-400 material-color.$clr-deep-purple-300 material-color.$clr-deep-purple-500,
  "indigo":      material-color.$clr-indigo-500      material-color.$clr-indigo-400      material-color.$clr-indigo-700,
  "blue":        material-color.$clr-blue-500        material-color.$clr-blue-400        material-color.$clr-blue-700,
  "light-blue":  material-color.$clr-light-blue-500  material-color.$clr-light-blue-400  material-color.$clr-light-blue-700,
  "cyan":        material-color.$clr-cyan-500        material-color.$clr-cyan-400        material-color.$clr-cyan-700,
  "teal":        material-color.$clr-teal-500        material-color.$clr-teal-400        material-color.$clr-teal-700,
  "green":       material-color.$clr-green-500       material-color.$clr-green-400       material-color.$clr-green-700,
  "light-green": material-color.$clr-light-green-500 material-color.$clr-light-green-400 material-color.$clr-light-green-700,
  "lime":        material-color.$clr-lime-500        material-color.$clr-lime-400        material-color.$clr-lime-700,
  "yellow":      material-color.$clr-yellow-500      material-color.$clr-yellow-400      material-color.$clr-yellow-700,
  "amber":       material-color.$clr-amber-500       material-color.$clr-amber-400       material-color.$clr-amber-700,
  "orange":      material-color.$clr-orange-400      material-color.$clr-orange-400      material-color.$clr-orange-600,
  "deep-orange": material-color.$clr-deep-orange-400 material-color.$clr-deep-orange-300 material-color.$clr-deep-orange-600,
  "brown":       material-color.$clr-brown-500       material-color.$clr-brown-400       material-color.$clr-brown-700,
  "grey":        material-color.$clr-grey-600        material-color.$clr-grey-500        material-color.$clr-grey-700,
  "blue-grey":   material-color.$clr-blue-grey-600   material-color.$clr-blue-grey-500   material-color.$clr-blue-grey-700
) {

  // Color palette
  [data-md-color-primary="#{$name}"] {
    --md-primary-fg-color:             hsl(#{hex2hsl(list.nth($colors, 1))});
    --md-primary-fg-color--light:      hsl(#{hex2hsl(list.nth($colors, 2))});
    --md-primary-fg-color--dark:       hsl(#{hex2hsl(list.nth($colors, 3))});

    // Inverted text for lighter shades
    @if list.index(("lime", "yellow", "amber", "orange"), $name) {
      --md-primary-bg-color:           hsla(0, 0%, 0%, 0.87);
      --md-primary-bg-color--light:    hsla(0, 0%, 0%, 0.54);
    } @else {
      --md-primary-bg-color:           hsla(0, 0%, 100%, 1);
      --md-primary-bg-color--light:    hsla(0, 0%, 100%, 0.7);
    }

    // Typeset color shades
    @if list.index(("grey", "blue-grey"), $name) {
      --md-typeset-a-color:            hsl(#{hex2hsl(material-color.$clr-indigo-500)});
    }
  }
}

// ----------------------------------------------------------------------------

// Adjust link colors for light primary colors
@each $name, $color in (
  "light-green":                       hsl(88, 58%, 43%),
  "lime":                              hsl(66, 88%, 32%),
  "yellow":                            hsl(54, 100%, 36%),
  "amber":                             hsl(45, 100%, 41%),
  "orange":                            hsl(36, 100%, 45%)
) {
  [data-md-color-primary="#{$name}"]:not([data-md-color-scheme="slate"]) {
    --md-typeset-a-color: #{$color};
  }
}

// ----------------------------------------------------------------------------
// Rules: white
// ----------------------------------------------------------------------------

// Define primary colors for white
[data-md-color-primary="white"] {
  --md-primary-fg-color:               hsla(var(--md-hue), 0%, 100%, 1);
  --md-primary-fg-color--light:        hsla(var(--md-hue), 0%, 100%, 0.7);
  --md-primary-fg-color--dark:         hsla(var(--md-hue), 0%, 0%, 0.07);
  --md-primary-bg-color:               hsla(var(--md-hue), 0%, 0%, 0.87);
  --md-primary-bg-color--light:        hsla(var(--md-hue), 0%, 0%, 0.54);

  // Typeset `a` color shades
  --md-typeset-a-color:                hsl(#{hex2hsl(material-color.$clr-indigo-500)});

  // Form button
  .md-button {
    color: var(--md-typeset-a-color);

    // Primary button
    &--primary {
      color: hsla(var(--md-hue), 0%, 100%, 1);
      background-color: var(--md-typeset-a-color);
      border-color: var(--md-typeset-a-color);
    }
  }

  // [(("tablet", "portrait")) +]: Header-embedded search
  @include break.break-from-device(("tablet", "landscape")) {

    // Search form
    .md-search__form {
      background-color: hsla(var(--md-hue), 0%, 0%, 0.07);

      // Search form on hover
      &:hover {
        background-color: hsla(var(--md-hue), 0%, 0%, 0.32);
      }
    }

    // Search icon
    .md-search__input + .md-search__icon {
      color: hsla(var(--md-hue), 0%, 0%, 0.87);
    }
  }

  // [screen +]: Add bottom border for tabs
@include break.break-from-device(("mobile", "portrait")) {

    // Navigation tabs
    .md-tabs {
      border-bottom: px2rem(1px) solid hsla(0, 0%, 0%, 0.07);
    }
  }
}

// ----------------------------------------------------------------------------
// Rules: black
// ----------------------------------------------------------------------------

// Define primary colors for black
[data-md-color-primary="black"] {
  --md-primary-fg-color:               hsla(var(--md-hue), 15%, 9%, 1);
  --md-primary-fg-color--light:        hsla(var(--md-hue), 15%, 9%, 0.54);
  --md-primary-fg-color--dark:         hsla(var(--md-hue), 15%, 9%, 1);
  --md-primary-bg-color:               hsla(var(--md-hue), 15%, 100%, 1);
  --md-primary-bg-color--light:        hsla(var(--md-hue), 15%, 100%, 0.7);

  // Typeset `a` color shades
  --md-typeset-a-color:                hsl(#{hex2hsl(material-color.$clr-indigo-500)});

  // Form button
  .md-button {
    color: var(--md-typeset-a-color);

    // Primary button
    &--primary {
      color: hsla(var(--md-hue), 0%, 100%, 1);
      background-color: var(--md-typeset-a-color);
      border-color: var(--md-typeset-a-color);
    }
  }

  // Header
  .md-header {
    background-color: hsla(var(--md-hue), 15%, 9%, 1);
  }

  // [(("tablet", "portrait")) -]: Layered navigation
  @include break.break-from-device(("tablet", "landscape")) {

    // Repository information container
    .md-nav__source {
      background-color: hsla(var(--md-hue), 15%, 11%, 0.87);
    }
  }

  // [tablet -]: Layered navigation
  @include break.break-to-device(("tablet", "landscape")) {

    // Site title in main navigation
    html & .md-nav--primary .md-nav__title[for="__drawer"] {
      background-color: hsla(var(--md-hue), 15%, 9%, 1);
    }
  }

  // [screen +]: Set background color for tabs
@include break.break-from-device(("mobile", "portrait")) {

    // Navigation tabs
    .md-tabs {
      background-color: hsla(var(--md-hue), 15%, 9%, 1);
    }
  }
}
